name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PIPENV_VENV_IN_PROJECT: enabled

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip pipenv wheel
        sudo apt-get install gdal-bin libgdal-dev
    - name: Cache Pipenv Dependencies
      uses: actions/cache@v2
      id: cache-dependencies
      with:
        path: ./.venv # since we know that .venv is gonna be created in the current working directory
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv
    - name: Install Pipenv dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        pipenv install

    - name: Try to make migrations
      run: |
        pipenv run python manage.py migrate
